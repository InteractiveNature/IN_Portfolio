/* Components CSS - Styles for specific components and sections */

/* Hero Section */
.hero {
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    text-align: center;
    position: relative;
    overflow: hidden;
}

.hero .container {
    text-align: center;
    width: 100%;
    max-width: var(--container-width);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.hero h1 {
    font-family: 'FunnelDisplay-Light', Arial, sans-serif;
    font-size: var(--font-size-4xl);
    font-weight: 300;
    line-height: 1.1;
    margin-bottom: var(--spacing-md);
    max-width: 900px;
    margin-left: auto;
    margin-right: auto;
    text-align: center;
}

.hero p {
    font-size: var(--font-size-lg);
    max-width: 600px;
    margin-bottom: var(--spacing-lg);
    opacity: 0.8;
    margin-left: auto;
    margin-right: auto;
    text-align: center;
}

.hero .cta-button {
    margin: 0 auto;
}

/* Services Section */
.services {
    padding: var(--spacing-xxl) 0;
}

.services-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: var(--spacing-lg);
}

.service-card {
    background-color: rgba(255, 255, 255, 0.03);
    padding: var(--spacing-lg);
    border-radius: var(--border-radius);
    transition: var(--transition-normal);
    position: relative;
    overflow: hidden;
    border: 1px solid rgba(255, 255, 255, 0.05);
}

.service-card:hover {
    transform: translateY(-10px);
    background-color: rgba(255, 255, 255, 0.05);
    border-image: linear-gradient(
        90deg, 
        var(--gradient-color-1), 
        var(--gradient-color-2), 
        var(--gradient-color-3), 
        var(--gradient-color-4), 
        var(--gradient-color-5)
    ) 1;
}

.service-card h3 {
    font-size: var(--font-size-xl);
    margin-bottom: var(--spacing-sm);
    position: relative;
}

.service-card h3::after {
    content: '';
    position: absolute;
    width: 30px;
    height: 2px;
    background: linear-gradient(
        90deg, 
        var(--gradient-color-1), 
        var(--gradient-color-2), 
        var(--gradient-color-3), 
        var(--gradient-color-4), 
        var(--gradient-color-5)
    );
    bottom: -10px;
    left: 0;
}

.service-card p {
    opacity: 0.8;
    margin-bottom: var(--spacing-md);
}

.service-card a {
    background: linear-gradient(
        90deg, 
        var(--gradient-color-1), 
        var(--gradient-color-2) var(--gradient-position), 
        var(--gradient-color-3), 
        var(--gradient-color-4), 
        var(--gradient-color-5)
    );
    background-size: 300% 100%;
    background-position-x: var(--gradient-position);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    text-decoration: none;
    font-weight: 500;
    display: flex;
    align-items: center;
    gap: var(--spacing-xs);
}

.service-card a svg {
    transition: transform var(--transition-normal);
}

.service-card a:hover svg {
    transform: translateX(5px);
}

/* Work/Portfolio Section */
.work {
    padding: var(--spacing-xxl) 0;
}

.work-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
    position: relative;
}

/* Work/Portfolio Section - Add these to your components.css file */

/* Make work items clickable */
.work-item-link {
    display: block;
    text-decoration: none;
    color: var(--text);
}

.work-item {
    position: relative;
    overflow: hidden;
    border-radius: 8px;
    width: 100%;
    aspect-ratio: 16/9;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    box-shadow: 0 10px 30px -15px rgba(0, 0, 0, 0.5);
    z-index: 1;
}

.work-item-link:hover .work-item {
    transform: translateY(-10px);
    box-shadow: 0 15px 35px -15px rgba(0, 0, 0, 0.7);
}

.view-project {
    display: inline-block;
    margin-top: 1rem;
    padding: 0.5rem 1rem;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 4px;
    font-size: 0.9rem;
    font-weight: 500;
    transition: background 0.3s ease;
}

.work-item-link:hover .view-project {
    background: rgba(255, 255, 255, 0.2);
}

.work-item img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease;
}

.work-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(to top, rgba(0, 0, 0, 0.8), transparent);
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    padding: 2rem;
    opacity: 0;
    transition: opacity 0.3s ease;
}

.work-item:hover .work-overlay {
    opacity: 1;
}

.work-overlay h3 {
    font-size: var(--font-size-xl);
    margin-bottom: 0.5rem;
}

.work-overlay p {
    opacity: 0.8;
    font-size: var(--font-size-sm);
}

/* Add responsive adjustments */
@media (max-width: 768px) {
    .work-grid {
        grid-template-columns: repeat(2, 1fr);
        gap: 1rem;
    }
}

@media (max-width: 576px) {
    .work-grid {
        grid-template-columns: 1fr;
    }
}

/* Individual initial positions */
.work-item:nth-child(1) {
    top: 0;
    left: 5%;
}

.work-item:nth-child(2) {
    top: 15%;
    left: 35%;
}

.work-item:nth-child(3) {
    top: 90%;
    right: 1%;
}

.work-item:nth-child(4) {
    top: 40%;
    left: 15%;
}

.work-item img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform var(--transition-slow);
    transform-style: preserve-3d;
}

.work-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(to top, rgba(0, 0, 0, 0.8), transparent);
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    padding: var(--spacing-lg);
    opacity: 0;
    transition: opacity var(--transition-normal);
}

.work-item:hover .work-overlay {
    opacity: 1;
}

.work-overlay h3 {
    font-size: var(--font-size-xl);
    margin-bottom: var(--spacing-xs);
}

.work-overlay p {
    opacity: 0.8;
    font-size: var(--font-size-sm);
}

/* Clients Section */
.clients {
    padding: var(--spacing-xl) 0;
    background-color: rgba(255, 255, 255, 0.02);
    overflow: hidden; /* Make sure this is present */
}

.client-logo-scroll {
    overflow: hidden;
    width: 100%;
    position: relative;
    padding: var(--spacing-lg) 0;
}

.logo-container {
    display: flex;
    animation: scrollLogos 30s linear infinite;
    width: fit-content;
}

.logo-container img {
    height: auto;
    width: 180px; /* Adjusted width */
    max-width: 200px;
    margin: 0 var(--spacing-md);
    opacity: 0.7;
    transition: opacity var(--transition-normal);
    filter: grayscale(100%);
    object-fit: contain;
}

.logo-container img:hover {
    opacity: 1;
    filter: grayscale(0%);
}

@keyframes scrollLogos {
    0% {
        transform: translateX(0);
    }
    100% {
        transform: translateX(-50%);
    }
}
/* About Section */
.about {
    padding: var(--spacing-xxl) 0;
    position: relative;
}

.about-content {
    display: flex;
    align-items: center;
    gap: var(--spacing-xl);
}

.about-text {
    flex: 1;
}

.about-image {
    flex: 1;
    position: relative;
}

.about-image img {
    width: 100%;
    height: auto;
    border-radius: var(--border-radius);
}

.about-text h2 {
    font-size: var(--font-size-2xl);
    margin-bottom: var(--spacing-md);
}

.about-text p {
    margin-bottom: var(--spacing-md);
    opacity: 0.8;
}

/* Contact Section */
.contact {
    padding: var(--spacing-xxl) 0;
    position: relative;
}

.contact-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--spacing-xl);
}

.contact-form {
    background-color: rgba(255, 255, 255, 0.03);
    padding: var(--spacing-lg);
    border-radius: var(--border-radius);
    border: 1px solid rgba(255, 255, 255, 0.05);
}

.contact-info h2 {
    font-size: var(--font-size-2xl);
    margin-bottom: var(--spacing-md);
}

.contact-info p {
    margin-bottom: var(--spacing-md);
    opacity: 0.8;
}

.contact-details {
    margin-top: var(--spacing-lg);
}

.contact-details div {
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);
    margin-bottom: var(--spacing-sm);
}

.contact-details svg {
    width: 20px;
    height: 20px;
    stroke: url(#iridescent-gradient);
}

form div {
    margin-bottom: var(--spacing-md);
}

form label {
    display: block;
    margin-bottom: var(--spacing-xs);
    font-weight: 500;
}

form input,
form textarea {
    width: 100%;
    padding: var(--spacing-sm);
    background-color: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: var(--border-radius);
    color: var(--text);
    font-family: var(--font-family);
    resize: vertical;
}

form input:focus,
form textarea:focus {
    outline: none;
    border-image: linear-gradient(
        90deg, 
        var(--gradient-color-1), 
        var(--gradient-color-2), 
        var(--gradient-color-3), 
        var(--gradient-color-4), 
        var(--gradient-color-5)
    ) 1;
}

form button {
    padding: var(--spacing-sm) var(--spacing-lg);
    color: var(--text-dark);
    border: none;
    border-radius: 0;
    font-weight: 600;
    cursor: pointer;
    transition: all var(--transition-normal);
    position: relative;
    z-index: 1;
    background: linear-gradient(
        90deg, 
        var(--gradient-color-1), 
        var(--gradient-color-2) var(--gradient-position), 
        var(--gradient-color-3), 
        var(--gradient-color-4), 
        var(--gradient-color-5)
    );
    background-size: 300% 100%;
    background-position-x: var(--gradient-position);
}

form button:hover {
    background: transparent;
    border: 1px solid var(--gradient-color-1);
    color: var(--gradient-color-1);
}

form button::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
        90deg, 
        var(--gradient-color-1), 
        var(--gradient-color-2) var(--gradient-position), 
        var(--gradient-color-3), 
        var(--gradient-color-4), 
        var(--gradient-color-5)
    );
    background-size: 300% 100%;
    background-position-x: var(--gradient-position);
    z-index: -1;
    transition: opacity var(--transition-normal);
}

form button:hover::before {
    opacity: 0;
}
