# "Our Work" Gallery Feature Documentation

## Overview
This document provides information about the horizontal oval gallery in the "Our Work" section of the Interactive Nature portfolio website. It includes details about where the feature is located in the project, what files and components interact with it, and how to make changes if necessary.

## Feature Location

### HTML Structure
- **Main File**: `index.html`
- **Section**: The "Our Work" section, identified by the class `.work`
- **Gallery Container**: The `.work-grid` element within the "Our Work" section
- **Gallery Items**: Each work item is wrapped in an `.work-item-link` element

### CSS Styling
- **Main Styling**: `css/components.css` (lines ~250-450)
- **Responsive Styling**: `css/responsive.css` (various media queries)

### JavaScript Functionality
- **WorkItemManager**: `js/components/WorkItemManager.js` - Handles the dynamic creation and management of work items

## Key Components

### HTML Structure
```html
<section id="work" class="work">
  <div class="container">
    <div class="section-header">
      <h2>Our Work</h2>
      <p>Explore our portfolio of innovative projects</p>
    </div>
  </div>
  <div class="work-grid">
    <!-- Work items are dynamically generated here -->
  </div>
</section>
```

### CSS Components
1. **Gallery Container** (`.work-grid`):
   - Horizontal flex layout
   - Edge-to-edge width (100vw)
   - Centered positioning with negative margin
   - Hidden scrollbar

2. **Work Items** (`.work-item-link`):
   - Oval shape using border-radius: 50%
   - Horizontal stretching using aspect-ratio: 1.5/1
   - Overlapping layout with negative margin-right
   - Z-index hierarchy (items to the left have higher z-index)

3. **Hover Effects**:
   - Scale up on hover
   - Shift adjacent items
   - Show overlay with project title and description
   - Staggered transitions for items to the right

4. **Responsive Behavior**:
   - Adjusts sizes for different screen widths
   - Converts to vertical layout on mobile

## How to Make Changes

### Adjusting Oval Size
To change the size of the oval work items:

1. In `css/components.css`, locate the `.work-item-link` selector (appears twice)
2. Modify the following properties:
   ```css
   min-width: 736px; /* Adjust this value to change width */
   height: 460px; /* Adjust this value to change height */
   margin-right: -170px; /* Adjust this value to change overlap */
   ```
3. Make corresponding adjustments in `css/responsive.css` for different screen sizes

### Changing Hover Effects
To modify the hover behavior:

1. In `css/components.css`, locate the hover-related selectors:
   ```css
   .work-grid:hover .work-item-link { ... }
   .work-item-link:hover { ... }
   .work-item-link:hover ~ .work-item-link { ... }
   ```
2. Adjust the transform values to change movement distance
3. Modify the transition property to change animation speed/easing
4. Adjust z-index values if needed (ensure items to the left stay on top)

### Fixing Z-Index Issues
If z-index flickering occurs during scrolling:

1. Ensure the z-index hierarchy is maintained (higher values for items further left)
2. Make sure hovered items have a lower z-index (5) than non-hovered items to their left
3. Check that transition properties are not causing oscillation (avoid cubic-bezier with overshoot)

### Adjusting Scrolling Behavior
If scrolling feels too slow or unresponsive:

1. Ensure `scroll-behavior: smooth` is NOT present in any `.work-grid` styles
2. Check that transition durations are not too long (0.5s is recommended)
3. Use `will-change: transform` for better performance

### Adding New Work Items
New work items are dynamically generated by the WorkItemManager component:

1. Update the projects data in the appropriate data source
2. The WorkItemManager will automatically create new items with the correct structure
3. No CSS changes are needed unless you want to modify the appearance

## Important Notes

1. **Z-Index Management**: The gallery relies on a specific z-index hierarchy to prevent flickering during scrolling. Items further to the left have higher z-index values than items to their right.

2. **Performance Considerations**: 
   - Avoid using `scroll-behavior: smooth` as it can cause slow scrolling
   - Keep transition durations reasonable (0.5s or less)
   - Use `will-change: transform` for better animation performance

3. **Responsive Design**:
   - The gallery converts to a vertical layout on mobile devices
   - Different sizes and margins are applied at various breakpoints
   - Check all screen sizes when making changes

4. **Browser Compatibility**:
   - The gallery uses modern CSS features like aspect-ratio
   - For older browsers, ensure appropriate fallbacks are in place

## Troubleshooting

1. **Flickering During Scrolling**:
   - Check z-index hierarchy
   - Simplify transition timing functions
   - Reduce overlap between items

2. **Slow Scrolling**:
   - Remove `scroll-behavior: smooth`
   - Reduce transition durations
   - Optimize animation properties

3. **Cropping Issues on Hover**:
   - Adjust transform-origin (currently center 40%)
   - Reduce scale amount (currently 1.05)
   - Check for any overflow constraints
